---
name: Build

permissions:
  contents: read

on:
  push:
    branches: [main]
    paths:
      - "go.mod"
      - "**.go"
  pull_request:
    branches: [main]
    paths:
      - "go.mod"
      - "**.go"
  schedule:
    - cron: "0 10 * * 1"
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        go: ["stable", "oldstable"]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Create Dummy Frontend Build
        run: mkdir web/app/build && touch web/app/build/dummy.txt

      - name: Go Vet
        run: go vet ./...

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Build
        run: go build -o /dev/null ./...

      - name: make test
        run: make test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "stable"
      - uses: actions/checkout@v3

      - name: Create Dummy Frontend Build
        run: mkdir web/app/build && touch web/app/build/dummy.txt

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
