---
name: Security Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "10 13 * * 1"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    steps:
      - uses: actions/checkout@v3

      - name: Determine audit mode
        id: mode
        run: |
          if [[ "${{ github.event_name }}" == "push" || "${{ github.event_name }}" == "pull_request" ]]; then
            echo "full_audit=false" >> $GITHUB_OUTPUT
          else
            echo "full_audit=true" >> $GITHUB_OUTPUT
          fi

      - name: Check modified files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: .github/file-filters.yml

      - name: Install Python
        if: ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.auditable == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Semgrep
        if: ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.auditable == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Install Go
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.backend_all == 'true' }}
        uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - uses: actions/cache@v3
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.backend_all == 'true' }}
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install govulncheck
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.backend_all == 'true' }}
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Create Dummy Frontend Build
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.backend_all == 'true' }}
        run: mkdir web/app/build && touch web/app/build/dummy.txt

      - name: Install Go Dependencies
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.backend_all == 'true' }}
        run: go mod tidy

      - name: Audit Go Code
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.backend_all == 'true' }}
        run: make audit

      - name: Install Node
        if: |
          ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.frontend_all == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: "latest"
          cache: "npm"
          cache-dependency-path: "web/app/package-lock.json"

      - name: Install NPM dependencies
        if: ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.frontend_all == 'true' }}
        run: npm ci && git diff --exit-code
        working-directory: web/app

      - name: Audit Frontend Code
        if: ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.frontend_all == 'true' }}
        run: make audit-fe

      - name: Audit GitHub Actions
        if: ${{ steps.mode.outputs.full_audit == 'true' || steps.changes.outputs.ci == 'true' }}
        run: make audit-gha
